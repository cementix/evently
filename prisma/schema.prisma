generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  clerkId   String @id @unique
  email     String @unique
  username  String @unique
  firstName String
  lastName  String
  photo     String
}

//   createdAt       DateTime @default(now())
//   updatetAt       DateTime @updatedAt
//   organizedEvents Event[]
//   orders          Order[]
// }

// model Event {
//   title         String
//   description   String?
//   location      String?
//   imageUrl      String
//   startDateTime DateTime? @default(now())
//   endDateTime   DateTime? @default(now())
//   price         String?
//   isFree        Boolean?  @default(false)
//   url           String?
//   createdAt     DateTime  @default(now())
//   updatetAt     DateTime  @updatedAt
//   categoryName  String
//   id            String    @id @default(uuid())
//   organizerId   String
//   category      Category  @relation(fields: [categoryName], references: [name])
//   organizer     User      @relation(fields: [organizerId], references: [clerkId])
//   orders        Order[]
// }

// model Category {
//   id        String   @id @default(uuid())
//   name      String   @unique
//   createdAt DateTime @default(now())
//   updatetAt DateTime @updatedAt
//   events    Event[]
// }

// model Order {
//   stripeId    String @unique
//   totalAmount String
//   eventId     String
//   userId      String
//   event       Event  @relation(fields: [eventId], references: [id])
//   buyer       User   @relation(fields: [userId], references: [clerkId])
// }
